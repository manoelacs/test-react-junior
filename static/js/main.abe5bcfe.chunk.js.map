{"version":3,"sources":["contexts/AppContext.tsx","components/Form/index.tsx","shareds/mockProducts.ts","components/Table/styles.ts","components/Table/index.tsx","components/Main/styles.ts","components/Main/index.tsx","App.tsx","index.tsx"],"names":["AppContext","createContext","AppProvider","children","rest","useState","products","setProducts","activeForm","setActiveForm","console","log","Provider","value","addProduct","product","skuExists","codeSku","filter","item","length","deleteProduct","index","i","splice","handleVisibleForm","useStyles","makeStyles","theme","createStyles","root","padding","spacing","paper","buttons","display","justifyContent","button","marginTop","marginLeft","schema","yup","shape","id","required","positive","integer","productName","price","category","label","Form","classes","useForm","resolver","yupResolver","control","errors","register","formState","handleSubmit","reset","useContext","React","className","onSubmit","data","alert","JSON","stringify","Grid","container","xs","md","render","field","Input","type","message","name","defaultValue","options","Button","variant","color","onClick","mockProducts","TextField","styled","input","ClearButton","ContainerForm","div","columns","IconButton","Add","Search","selector","sortable","editable","FilterComponent","filterText","onFilter","onClear","placeholder","aria-label","onChange","EditableCell","row","column","col","setValue","handleOnChange","e","target","editing","Select","MenuItem","style","width","cell","Table","innerData","setInnerData","editingId","setEditingId","setFilterText","setTheme","filteredItems","toLowerCase","includes","formData","useRef","current","subHeaderComponentMemo","useMemo","isEditing","record","formOnChange","event","nam","val","cancel","mergedColumns","map","createColumns","useCallback","allowOverflow","minWidth","payload","tempData","findIndex","editRow","save","backgroundColor","Edit","window","confirm","r","slice","deleteRow","Delete","FormControlLabel","Switch","checked","title","defaultSortField","subHeader","subHeaderComponent","contextActions","ArrowDownward","appBar","position","layout","marginRight","breakpoints","up","marginBottom","stepper","Main","Fragment","CssBaseline","AppBar","Toolbar","Typography","noWrap","Paper","component","align","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.abe5bcfe.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-expressions */\r\nimport { createContext, ReactNode,  useState } from 'react';\r\nimport { mockProducts } from '../shareds/mockProducts';\r\n\r\nexport const AppContext = createContext({} as ContextDataValues);\r\n\r\ninterface Iproduct{\r\n    id: any;\r\n    codeSku: number;\r\n    productName: string;\r\n    price: string;\r\n    category: { label: string; value: string };\r\n}\r\n//const data =  mockProducts;\r\ninterface ContextDataValues{\r\n    products: Iproduct[];\r\n    activeForm:boolean;\r\n    addProduct: (product: Iproduct) => void;\r\n    deleteProduct: (codeSku:number) => void;\r\n    //editProduct: () => void;\r\n    skuExists: (codeSku:number) => boolean; \r\n    handleVisibleForm:() => void;\r\n}\r\n\r\ninterface AppProviderProps{\r\n    children: ReactNode;\r\n    products: Iproduct[]; \r\n    activeForm: boolean;    \r\n}\r\n\r\nexport function AppProvider({ \r\n    children,\r\n    ...rest } : AppProviderProps){\r\n\r\n        const [products, setProducts] = useState<Iproduct[]>( rest.products ?? []);\r\n        const [activeForm, setActiveForm] = useState(rest.activeForm ?? false); \r\n        console.log(products);\r\n\r\n        const addProduct = (product: Iproduct) => {\r\n            setProducts([...products, product]);\r\n           // data.concat(product);\r\n            console.log('produto adicionado', products);\r\n        }\r\n        const skuExists = (codeSku:number) => {          \r\n           const exist =  products.filter(item => item.codeSku === codeSku)           \r\n           const resp = exist.length > 0 ? true: false;          \r\n           return resp;\r\n        }\r\n        const deleteProduct = (codeSku: number) => {\r\n\r\n            let index= -1;\r\n            for(let i = 0; i < products.length; i++) {\r\n                if(products[i].codeSku === codeSku){\r\n                    index = i;\r\n                }\r\n            }\r\n            if(index !== -1){\r\n                 setProducts(products.splice(index, 1))\r\n            } \r\n        }\r\n       const  handleVisibleForm = () => {\r\n            if(activeForm){\r\n                setActiveForm(false);\r\n            }\r\n            setActiveForm(true);\r\n            \r\n        }\r\n\r\n    return(\r\n        <AppContext.Provider \r\n            value={{\r\n                //values                              \r\n                products,\r\n                activeForm,\r\n                //Functions\r\n                addProduct,\r\n                skuExists,\r\n                deleteProduct, \r\n                handleVisibleForm,  \r\n            }}\r\n        >\r\n            { children }           \r\n\r\n        </AppContext.Provider>\r\n    )\r\n    \r\n}","import React, {useContext} from \"react\";\r\nimport Select from \"react-select\";\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport { Input, Grid, Button} from \"@material-ui/core\";\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport  { AppContext} from '../../contexts/AppContext';\r\n\r\nimport \"./styles.css\";\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: { \r\n      padding: theme.spacing(3, 0, 5),    \r\n    },\r\n    paper: {     \r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'end',\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(3),\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface IFormInputs {\r\n  id: any;\r\n  codeSku: number;\r\n  productName: string;\r\n  price: string;\r\n  category: { label: string; value: string };\r\n}\r\ninterface IFormProps{\r\n  handleVisibleForm: () => void\r\n}\r\nconst schema = yup.object().shape({\r\n  id: yup.string().required(),\r\n  codeSku: yup.number().positive().integer().required(),\r\n  productName: yup.string().required(),\r\n  price: yup.string().required(),\r\n  category: yup.object().shape({ label: yup.string(), value: yup.string()})\r\n});\r\n\r\n\r\nconst Form = ( {handleVisibleForm}: IFormProps) => {\r\n  const classes = useStyles();\r\n\r\n  const { control, register, formState: { errors }, handleSubmit, reset } = useForm<IFormInputs>({\r\n    resolver: yupResolver(schema)\r\n  });;\r\n  const {products, addProduct, skuExists, activeForm} = useContext(AppContext);\r\n  console.log( React.useContext(AppContext))\r\n\r\n  console.log([...products])\r\n\r\n  const onSubmit = (data: IFormInputs) => {\r\n   \r\n    if(!skuExists(data.codeSku)){\r\n      console.log(products[products.length-1].id)\r\n      const id  = (products[products.length-1].id) + 1;\r\n      data.id = id;\r\n      addProduct(data);\r\n      reset();\r\n      alert(JSON.stringify(data));\r\n    }\r\n    else{\r\n      alert(\"Código SKU já cadastrado no sistema!\")\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <div className={classes.root} >\r\n\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n    <Grid container spacing={3}>\r\n    \r\n    <Grid item xs={12} md={3} >\r\n      <label>Código SKU</label>\r\n      {/* <Input {...register(\"codeSku\", { required: true })} />\r\n      <p>{errors.codeSku?.message}</p> */}\r\n      {<Controller\r\n        render={({ field }) => <> <Input {...field } className=\"materialUIInput\" type='number' />\r\n         {errors.codeSku && <p>{errors.codeSku.message}</p> } </>\r\n         }\r\n        name=\"codeSku\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n      />}\r\n    </Grid>\r\n    <Grid item xs={12} md={9} >\r\n      <label className={'label'}> Nome do Produto</label>\r\n      <Controller\r\n        render={({ field }) => <Input {...field} className=\"materialUIInput\" />}\r\n        name=\"productName\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6} >\r\n      <label className={'label'}>Preço</label>\r\n      <Controller\r\n        render={({ field }) => <Input {...field} className=\"materialUIInput\" />}\r\n        name=\"price\"\r\n        control={control}\r\n        defaultValue=\"\"\r\n      />\r\n    </Grid>\r\n    <Grid item xs={12} md={6}>\r\n      <label className={'label'} >Categoria</label>\r\n      <Controller  \r\n        name=\"category\"\r\n        render={({ field }) => (\r\n          <Select  className={'select'}\r\n            {...field}\r\n            options={[\r\n              { value: \"leite\", label: \"Leite\" },\r\n              { value: \"doce\", label: \"Doce\" },\r\n              { value: \"iogurte\", label: \"Iogurte\" }\r\n            ]}\r\n          />\r\n        )}\r\n        control={control}\r\n        defaultValue=\"\"\r\n      />\r\n    </Grid>\r\n    <Grid >\r\n      <div className={classes.buttons}>\r\n          <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n          >Salvar</Button>\r\n           <Button onClick={ handleVisibleForm }\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              type=\"submit\"\r\n              className={classes.button}\r\n          >Cancelar</Button>\r\n\r\n      </div>\r\n\r\n    </Grid>\r\n   \r\n    \r\n    {/* <button type=\"submit\" className={'button'}>Salvar</button> */}\r\n  </Grid>\r\n  </form>\r\n  </div>\r\n  );\r\n}; export default Form;\r\n\r\n\r\n","export const mockProducts = [\r\n\r\n    { id: 1, \r\n      codeSku: 768,\r\n      productName: 'leite camila',\r\n      price: '5,99',\r\n      category: { label: 'Leite', value: 'leite'}\r\n    },\r\n    { id: 2,\r\n      codeSku: 763,\r\n      productName: 'leite molico',\r\n      price: '5,00',\r\n      category: { label: 'Leite', value: 'leite'}\r\n    },\r\n    { id: 3,\r\n      codeSku: 758,\r\n      productName: 'leite itambé',\r\n      price: '5,59',\r\n      category: { label: 'Leite', value: 'leite'}\r\n    },\r\n    { id: 4,\r\n      codeSku: 668,\r\n      productName: 'leite regina',\r\n      price: '5,79',\r\n      category: { label: 'Leite', value: 'leite'}\r\n    },\r\n  ]","import styled from 'styled-components';\r\n\r\nexport const TextField = styled.input`\r\n  height: 32px;\r\n  width: 250px;\r\n  border-radius: 3px;\r\n  border-top-left-radius: 5px;\r\n  border-bottom-left-radius: 5px;\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n  border: 1px solid #e5e5e5;\r\n  padding: 0 32px 0 16px;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\nexport const ClearButton = styled.button`\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  border-top-right-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  background: lightblue;\r\n  height: 34px;\r\n  width: 55px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const ContainerForm = styled.div`\r\n    padding-top:50px; \r\n    border-top: 1px solid black\r\n\r\n`;","import DataTable from 'react-data-table-component';\r\nimport React, { useCallback, useRef, useState } from 'react';\r\nimport{ ArrowDownward, Delete, Add, Edit, Search } from '@material-ui/icons';\r\nimport {Button, IconButton, Select, MenuItem, FormControlLabel, Switch} from '@material-ui/core/';\r\nimport {mockProducts} from '../../shareds/mockProducts';\r\nimport { AppContext } from '../../contexts/AppContext';\r\nimport { TextField, ClearButton, ContainerForm} from './styles';\r\n\r\n\r\nconst actions = (\r\n <> \r\n   <IconButton\r\n   color=\"primary\"\r\n >\r\n   <Add />\r\n </IconButton>\r\n  <IconButton\r\n  color=\"primary\"\r\n>\r\n    <Search/>\r\n</IconButton> </>\r\n);\r\nconst data =  mockProducts\r\nconst columns = [\r\n    {\r\n      name: 'SKU',\r\n      selector: 'codeSku',\r\n      sortable: true,\r\n      editable: true,\r\n    },\r\n    {\r\n      name: 'Nome',\r\n      selector: 'productName',\r\n      sortable: true,\r\n      editable: true,\r\n    },\r\n    {\r\n      name: 'Preço',\r\n      selector: 'price',\r\n      sortable: true,\r\n      editable: true,\r\n    },\r\n    {\r\n      name: 'Categoria',\r\n      selector: 'category',\r\n      sortable: true,\r\n      editable: true,\r\n    },\r\n    \r\n  ];\r\n  const FilterComponent = ({ filterText, onFilter, onClear }:any) => (\r\n    <>\r\n      <TextField \r\n      id=\"search\" \r\n      type=\"text\" \r\n      placeholder=\"Busque pelo nome do produto\" \r\n      aria-label=\"Search Input\" \r\n      value={filterText} onChange={onFilter} />\r\n      <ClearButton type=\"button\" onClick={onClear}>Limpar</ClearButton>\r\n    </>\r\n  );\r\n  const EditableCell = ({ row, index, column, col, onChange }: any) => {\r\n    //console.log(row, column);\r\n    const [value, setValue] = useState(row[column.selector]);\r\n\r\n    const handleOnChange = (e: { target: { value: any; }; }) => {\r\n      setValue(e.target.value);\r\n      onChange?.(e);\r\n    };\r\n  \r\n    if (column?.editing) {\r\n      console.log(column?.editing, column, value)\r\n      if(column.selector === 'category'){\r\n        console.log('entrou no select')\r\n        return(\r\n            <Select\r\n            /* labelId=\"demo-simple-select-helper-label\"\r\n            id=\"demo-simple-select-helper\" */\r\n               value={value}\r\n            onChange={handleOnChange}\r\n          >\r\n            {/*  <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem> */}\r\n              <MenuItem value={\"leite\"}>Leite</MenuItem>\r\n              <MenuItem value={\"doce\"}>Doce</MenuItem>\r\n              <MenuItem value={\"iogurte\"}>Iogurte</MenuItem>\r\n          </Select>\r\n\r\n        )\r\n      }\r\n      return (        \r\n        <input\r\n          type={column.type || 'text'}\r\n          name={column.selector}\r\n          style={{ width: '100%' }}\r\n          onChange={handleOnChange}\r\n          value={value}\r\n        />\r\n      );\r\n    }\r\n  \r\n    if (col.cell) {\r\n      return col.cell(row, index, column);\r\n    }\r\n    if(column.selector === \"category\"){\r\n      console.log(row[\"category\"].label);\r\n      return row[\"category\"].label;\r\n    }   \r\n    return row[column.selector];\r\n  };\r\n  \r\n  const Table = () => {\r\n\r\n    const {products, addProduct, skuExists, deleteProduct} = React.useContext(AppContext);\r\n    const [innerData, setInnerData] = useState(products);\r\n    const [editingId, setEditingId] = useState(-1);\r\n    const [filterText, setFilterText] = useState('');\r\n    const [theme, setTheme] = React.useState('default');\r\n\r\n  const handleChange = () => {\r\n    if (theme === 'dark') {\r\n      setTheme('default');\r\n    } else {\r\n      setTheme('dark');\r\n    }\r\n  };\r\n    const filteredItems = products.filter(\r\n      item => item.productName && item.productName.toLowerCase().includes(filterText.toLowerCase()));\r\n    \r\n    let formData = useRef({}).current;\r\n    const subHeaderComponentMemo = React.useMemo(() => {\r\n        const handleClear = () => {\r\n          if (filterText) {\r\n            setFilterText('');\r\n          }\r\n        };\r\n    return <FilterComponent \r\n          onFilter={(e: { target: { value: React.SetStateAction<string>; }; }) =>\r\n          setFilterText(e.target.value)} onClear={handleClear} filterText={filterText} />;\r\n        }, [filterText]);\r\n\r\n    const isEditing = (record: { id: number; }) => record.id === editingId;\r\n  \r\n    const formOnChange = (event: { target: { name: any; value: any; }; }) => {\r\n      const nam = event.target.name;\r\n      const val = event.target.value;\r\n  \r\n      formData = {\r\n        ...formData,\r\n        [nam]: val,\r\n      };\r\n    };\r\n  \r\n    const edit = (record: { id: any; }) => {\r\n      setEditingId(record.id);\r\n    };\r\n\r\n    const deleteRow = (record: { id: any; }) => {\r\n        if (window.confirm(`Você tem certeza que quer deletar o produto:\\r ${record.id}?`)) {\r\n\r\n            const index = innerData.findIndex(r => r.id === record.id);\r\n\r\n            setInnerData([...innerData.slice(0, index), ...innerData.slice(index + 1)])\r\n            deleteProduct(innerData[index].codeSku);\r\n          }\r\n        console.log(record.id);\r\n    };\r\n  \r\n    const cancel = () => {\r\n      setEditingId(-1);\r\n    };\r\n  \r\n    const save = (row: any) => {\r\n      const payload = { ...row, ...formData };\r\n      const tempData = [...innerData];\r\n      console.log(row, formData);\r\n  \r\n      \r\n      const index = tempData.findIndex(row => editingId === row.id);\r\n      if (index > -1) {\r\n        \r\n        const editRow = tempData[index];\r\n        console.log(editRow);\r\n        tempData.splice(index, 1, {\r\n          ...editRow, \r\n          ...payload,\r\n        });\r\n        setEditingId(-1);\r\n        setInnerData(tempData);\r\n      }\r\n    };\r\n  \r\n    const mergedColumns = columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        cell: (row: { id: any; }, index: any, column: any) => {\r\n          const editing = isEditing(row);\r\n          return (\r\n            <EditableCell\r\n              row={row}\r\n              index={index}\r\n              column={{ ...column, editing }}\r\n              col={col}\r\n              onChange={formOnChange}\r\n            />\r\n          );\r\n        },\r\n      };\r\n    });\r\n  \r\n    const createColumns = useCallback(() => {\r\n      return [\r\n        ...mergedColumns,\r\n        {\r\n          name: 'Ações',\r\n          allowOverflow: true,\r\n          minWidth: '200px',\r\n          cell: (row: { id: any; }) => {\r\n            const editable = isEditing(row);\r\n            if (editable) {\r\n              return (\r\n                <div>\r\n                  <button \r\n                  type=\"button\" \r\n                  onClick={() => save(row)} \r\n                  style={{ backgroundColor: 'lightgreen', color:'black' }}>Salvar</button>\r\n\r\n                  <button \r\n                  type=\"button\" \r\n                  onClick={cancel} \r\n                  style={{ backgroundColor: 'orangered', color:'white' }}>Cancelar</button>\r\n                </div>\r\n              );\r\n            }\r\n            return ( \r\n                <div>\r\n                    <IconButton color=\"primary\" onClick={() => edit(row)} >\r\n                        <Edit/>\r\n                     </IconButton>                         \r\n                    <IconButton color=\"secondary\" onClick={() => deleteRow(row)}>\r\n                        <Delete/>\r\n                    </IconButton>\r\n\r\n                </div>)\r\n             \r\n          },\r\n        },\r\n      ];\r\n    }, [mergedColumns]);\r\n  \r\n    return (\r\n      <ContainerForm>\r\n      <FormControlLabel\r\n        label=\"Dark Mode\" \r\n        control={(\r\n          <Switch\r\n          checked={theme === 'dark'}\r\n          onChange={handleChange}\r\n          />\r\n        )}       \r\n      />\r\n      <DataTable\r\n        title=\"Lista de Produtos\"\r\n        columns={createColumns()}\r\n        data={filteredItems}\r\n        defaultSortField=\"title\"\r\n       /*  actions={actions} */\r\n        subHeader\r\n        subHeaderComponent={subHeaderComponentMemo}\r\n        contextActions= { <IconButton ><ArrowDownward/></IconButton>}\r\n        theme={theme}\r\n      />\r\n      </ContainerForm>\r\n    );\r\n  }; export default Table;","import { makeStyles} from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n      position: 'relative',\r\n    },\r\n    layout: {\r\n      width: 'auto',\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n        width: 600,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n      },\r\n    },\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      marginBottom: theme.spacing(3),\r\n      padding: theme.spacing(2),\r\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n        marginTop: theme.spacing(6),\r\n        marginBottom: theme.spacing(6),\r\n        padding: theme.spacing(3),\r\n      },\r\n    },\r\n    stepper: {\r\n      padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(3),\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  }));","import React, { useContext, useState } from 'react'\r\nimport { Add} from '@material-ui/icons'\r\nimport {CssBaseline, Typography, AppBar, Paper, Toolbar,IconButton } from '@material-ui/core';\r\n\r\nimport Form from '../Form/index';\r\nimport Table from '../Table/index';\r\n\r\nimport { useStyles } from './styles';\r\n\r\nimport { AppContext, AppProvider } from '../../contexts/AppContext';\r\n\r\nimport { mockProducts } from '../../shareds/mockProducts';\r\n\r\n\r\nconst data =  mockProducts; \r\nexport default function Main() {\r\n\r\n    const classes = useStyles();       \r\n    const {products} = useContext(AppContext);\r\n    const [activeForm, setActiveForm] = useState(false);\r\n    console.log( products);  \r\n    const handleVisibleForm = () => {\r\n      activeForm? setActiveForm(false) : setActiveForm(true)\r\n    }   \r\n\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <AppProvider products = { data } activeForm={activeForm}>\r\n          <CssBaseline />\r\n          <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                XProdutos\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <main className={classes.layout}>\r\n          \r\n            <Paper className={classes.paper}>\r\n              <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                Adicione um produto \r\n                <IconButton onClick={handleVisibleForm }\r\n                  color=\"primary\"\r\n                 >\r\n                   <Add />\r\n               </IconButton>   \r\n              </Typography>              \r\n              { activeForm && <Form handleVisibleForm = { handleVisibleForm} />}\r\n              <Table/>\r\n\r\n            </Paper>\r\n          </main>\r\n        </AppProvider>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport Form from './components/Form/index';\nimport Main from './components/Main/index';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     {/* <Form/> */}\n     <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}